import Head from "next/head";
import { Inter } from "@next/font/google";
import { useEffect, useMemo, useState } from "react";
import { User } from "domain/type/user";
import { Post } from "domain/type/post";
import { Comment } from "domain/type/comment";

import { ProgressSpinner } from "../components";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [users, setUsers] = useState<User[]>([]);
  const [posts, setPosts] = useState<Post[]>([]);
  const [comments, setComments] = useState<Comment[]>([]);
  const [activeUser, setActiveUser] = useState<User | null>(null);

  // https://jsonplaceholder.typicode.com/
  const getUsers = async () => {
    const res = await fetch("https://jsonplaceholder.typicode.com/users");
    const data: User[] = await res.json();
    setUsers(data);
  };

  const getPosts = async () => {
    const res = await fetch("https://jsonplaceholder.typicode.com/posts");
    const data: Post[] = await res.json();
    setPosts(data);
  };

  const getComments = async () => {
    const res = await fetch("https://jsonplaceholder.typicode.com/comments");
    const data: Comment[] = await res.json();
    setComments(data);
  };

  const filteredPosts = useMemo(() => {
    if (activeUser) {
      return posts.filter((post) => post.id === activeUser.id);
    }
    return [];
  }, [activeUser, posts]);

  useEffect(() => {
    getUsers();
    getPosts();
    getComments();
  }, []);

  return (
    <>
      <Head>
        <title>User Post Viewer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1 className="text-2xl">User Post Viewer</h1>
        <h2 className="text-xl">Please select a user to find their comments</h2>
        <ul className="flex">
          {users.map((user) => {
            return (
              <li key={user.id}>
                <button type="button" onClick={() => setActiveUser(user)}>
                  {user.name}
                </button>
              </li>
            );
          })}
        </ul>
        <section>
          <h2 className="text-xl">Posts from {activeUser?.name}</h2>
          <ul>
            {filteredPosts.map((post) => {
              return (
                <li key={post.id}>
                  <h3 className="text-lg">{post.title}</h3>
                  <p>{post.body}</p>
                </li>
              );
            })}
          </ul>
        </section>
        <div>
          <ProgressSpinner size={3} />
        </div>
      </main>
    </>
  );
}
